(()=>{function e(){let e=parseInt(components.schedule__lock_start_hour.value.split(":")[0]),t=parseInt(components.schedule__lock_start_hour.value.split(":")[1]),s=parseInt(60*e),a=parseInt(s+t),n=parseInt(components.schedule__lock_end_hour.value.split(":")[0]),o=parseInt(components.schedule__lock_end_hour.value.split(":")[1]),r=parseInt(60*n);if(parseInt(r+o)<a){let e=Math.floor(a/60),t=a%60;components.schedule__lock_end_hour.value=`${e}:${t+30}`}}function t(e){return`${e.split(" ")[0].split("/")[1]}/${e.split(" ")[0].split("/")[0]}/${e.split(" ")[0].split("/")[2]}`}function s(e,t){return 1===e.length?"month"===t?`0${parseInt(e)+1}`:`0${e}`:"month"===t?parseInt(e)+1:e}components.schedule__lock_start_hour.value="00:00",components.schedule__lock_end_hour.value="00:00",components.schedule__lock_start_hour.onChange((()=>{e()})),components.schedule__lock_end_hour.onChange((()=>{e()})),components.criarbloqueio.onClick((async()=>{let e={lockDate:components.schedule__lock_date.value,lockStartHour:components.schedule__lock_start_hour.value,lockEndHour:components.schedule__lock_end_hour.value,scheduleDate:components.schedule__lock_date.value+" "+components.schedule__lock_start_hour.value,duration:components.schedule__duration.value,status:"active",physiotherapistId:components.schedule__physiotherapist_id.value,type:components.schedule__type.value};await async function(e){let a=e.physiotherapistId,n=e.lockStartHour,o=e.lockEndHour,r=e.lockDate,u=t(r),c=await async function(e){let t=new Date;t.setDate(t.getDate()+20);let a=t.toJSON().slice(0,10).replace(/-/g,"-"),n={},o=await executeAction("getphysioschedulessaas",null,{currentPhysiotherapist:e,finalDate:a});return"Success"===o&&(o=[]),o.forEach((e=>{let t={},a="",o=e.physiotherapist_id,r=e.schedule.slice(0,-1).split("T"),u=new Date(r);a=`${s(u.getDate().toString(),"day")}/${s(u.getMonth().toString(),"month")}/${u.getFullYear()}`,u.setMinutes(u.getMinutes()+30),t={start:r[1].substring(0,5),end:u.getHours()+":"+u.getMinutes()},Object.keys(n).includes(o.toString())?(Object.keys(n[o]).includes(a)||(n[o][a]=[]),n[o][a].push(t)):n[o]={[a]:[t]}})),n}(a),l=new Date(`${u} ${n}`),i=new Date(`${u} ${o}`),h=l.getDay(),p=await async function(e){let t=await executeAction("getphysioagendas",null,{currentPhysiotherapist:e});"Success"===t&&(t=[]);let s={"segunda-feira":1,"terça-feira":2,"quarta-feira":3,"quinta-feira":4,"sexta-feira":5,sábado:6,domingo:0};return t.forEach((e=>{e.weekday in s&&(e.weekday=s[e.weekday])})),t}(a),_=[],d=[];return p.forEach((e=>{e.weekday===h&&_.push(e)})),_.forEach((e=>{let t=[];e.physiotherapist_id in c&&r in c[e.physiotherapist_id]&&(t=c[e.physiotherapist_id][r]);let s=function(e,t,s,a){let n=s.sort(((e,t)=>e.start>t.start?1:-1)),o=[[e,e]],r=[];return n.forEach((s=>{Date.parse(`01/01/2011 ${e}`)<=Date.parse(`01/01/2011 ${s.start}`)<Date.parse(`01/01/2011 ${t}`)&&o.push([s.start,s.end])})),o.push([t,t]),o.forEach(((e,t)=>{if(t>0&&new Date(`01/01/2011 ${o[t][0]}`)-new Date(`01/01/2011 ${o[t-1][1]}`)>0){let e=new Date(`01/01/2011 ${o[t-1][1]}`),s=structuredClone(e),n=Math.abs(new Date(`01/01/2011 ${o[t][0]}`)-new Date(`01/01/2011 ${o[t-1][1]}`))/36e5*60,u=new Date(s.setMinutes(s.getMinutes()+n));n>=a&&r.push(function(e,t){let s,a,n,o=[];return[e,t].forEach((e=>{if(void 0===e)return o;s=1===e.getHours().toString().length?`0${e.getHours()}`:e.getHours(),a=1===e.getMinutes().toString().length?`0${e.getMinutes()}`:e.getMinutes(),n=`${s}:${a}`,o=o.concat(n)})),o}(e,u))}})),r}(e.start_hour,e.end_hour,t,Math.abs(i-l)/36e5*60);s.forEach((t=>{let s=new Date(`${u} ${t[0]}`),a=new Date(`${u} ${t[1]}`);s<=l&&a>=i&&(Object.values(d).includes(e.physiotherapist_id)||d.push(e.physiotherapist_id))}))})),Object.values(d).includes(parseInt(a))}(e)?async function(e){let{lockDate:s,lockStartHour:a,lockEndHour:n,status:o,physiotherapistId:r,type:u,scheduleDate:c}=e,l=function(e){return`${e.split(" ")[0].split("/")[2]}-${e.split(" ")[0].split("/")[1]}-${e.split(" ")[0].split("/")[0]} ${e.split(" ")[1]}`}(c),i=function(e,s,a){let n=t(a),o=new Date(`${n} ${e}`),r=new Date(`${n} ${s}`);return Math.abs(r-o)/36e5*60}(a,n,s);try{await executeAction("insertblocksaas",null,{physiotherapistId:r,type:u,status:o,blockDuration:i,newScheduleDate:l}),showToast("success","Bloqueio marcado com sucesso!")}catch(e){showToast("error","Tente novamente!")}}(e):showToast("error","Há conflitos na agenda do Fisioterapeuta!")}))})();